{
  "version": 3,
  "sources": ["../../../../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js", "../../../../../node_modules/use-sync-external-store/shim/index.js", "../../../../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js", "../../../../../node_modules/use-sync-external-store/shim/with-selector.js", "../../../../../node_modules/@connect2ic/react/dist/connect2ic-react.esm.js", "../../../../../node_modules/@xstate/react/es/useMachine.js", "../../../../../node_modules/@xstate/react/es/useInterpret.js", "../../../../../node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js", "../../../../../node_modules/@xstate/react/es/useConstant.js", "../../../../../node_modules/@xstate/react/es/utils.js", "../../../../../node_modules/@xstate/react/es/useActor.js", "../../../../../node_modules/@xstate/react/es/useSelector.js", "../../../../../node_modules/@xstate/react/es/createActorContext.js"],
  "sourcesContent": ["/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n", "/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\nvar shim = require('use-sync-external-store/shim');\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar useSyncExternalStore = shim.useSyncExternalStore;\n\n// for CommonJS interop.\n\nvar useRef = React.useRef,\n    useEffect = React.useEffect,\n    useMemo = React.useMemo,\n    useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n\nfunction useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n  // Use this to track the rendered snapshot.\n  var instRef = useRef(null);\n  var inst;\n\n  if (instRef.current === null) {\n    inst = {\n      hasValue: false,\n      value: null\n    };\n    instRef.current = inst;\n  } else {\n    inst = instRef.current;\n  }\n\n  var _useMemo = useMemo(function () {\n    // Track the memoized state using closure variables that are local to this\n    // memoized instance of a getSnapshot function. Intentionally not using a\n    // useRef hook, because that state would be shared across all concurrent\n    // copies of the hook/component.\n    var hasMemo = false;\n    var memoizedSnapshot;\n    var memoizedSelection;\n\n    var memoizedSelector = function (nextSnapshot) {\n      if (!hasMemo) {\n        // The first time the hook is called, there is no memoized result.\n        hasMemo = true;\n        memoizedSnapshot = nextSnapshot;\n\n        var _nextSelection = selector(nextSnapshot);\n\n        if (isEqual !== undefined) {\n          // Even if the selector has changed, the currently rendered selection\n          // may be equal to the new selection. We should attempt to reuse the\n          // current value if possible, to preserve downstream memoizations.\n          if (inst.hasValue) {\n            var currentSelection = inst.value;\n\n            if (isEqual(currentSelection, _nextSelection)) {\n              memoizedSelection = currentSelection;\n              return currentSelection;\n            }\n          }\n        }\n\n        memoizedSelection = _nextSelection;\n        return _nextSelection;\n      } // We may be able to reuse the previous invocation's result.\n\n\n      // We may be able to reuse the previous invocation's result.\n      var prevSnapshot = memoizedSnapshot;\n      var prevSelection = memoizedSelection;\n\n      if (objectIs(prevSnapshot, nextSnapshot)) {\n        // The snapshot is the same as last time. Reuse the previous selection.\n        return prevSelection;\n      } // The snapshot has changed, so we need to compute a new selection.\n\n\n      // The snapshot has changed, so we need to compute a new selection.\n      var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n\n      // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n      if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n        return prevSelection;\n      }\n\n      memoizedSnapshot = nextSnapshot;\n      memoizedSelection = nextSelection;\n      return nextSelection;\n    }; // Assigning this to a constant so that Flow knows it can't change.\n\n\n    // Assigning this to a constant so that Flow knows it can't change.\n    var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n\n    var getSnapshotWithSelector = function () {\n      return memoizedSelector(getSnapshot());\n    };\n\n    var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function () {\n      return memoizedSelector(maybeGetServerSnapshot());\n    };\n    return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n  }, [getSnapshot, getServerSnapshot, selector, isEqual]),\n      getSelection = _useMemo[0],\n      getServerSelection = _useMemo[1];\n\n  var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n  useEffect(function () {\n    inst.hasValue = true;\n    inst.value = value;\n  }, [value]);\n  useDebugValue(value);\n  return value;\n}\n\nexports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n", "import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useSelector } from '@xstate/react';\n\nconst Connect2ICContext = /*#__PURE__*/createContext({});\n\nconst Connect2ICProvider = _ref => {\n  let {\n    children,\n    client\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const dialog = {\n    open: () => setOpen(true),\n    close: () => setOpen(false),\n    isOpen: open\n  };\n  return /*#__PURE__*/React.createElement(Connect2ICContext.Provider, {\n    value: {\n      client,\n      dialog\n    }\n  }, children);\n};\n\nconst useConnect = props => {\n  var _client$_service$stat, _client$_service$stat2, _client$_service$stat3, _client$_service$stat4, _client$_service$stat5, _client$_service$stat6, _client$_service$stat7, _client$_service$stat8, _client$_service$stat9, _client$_service$stat10;\n\n  // TODO: handle\n  const {\n    onConnect = () => {},\n    onDisconnect = () => {}\n  } = props !== null && props !== void 0 ? props : {};\n  const {\n    client\n  } = useContext(Connect2ICContext);\n  const {\n    principal,\n    activeProvider,\n    status\n  } = useSelector(client._service, state => ({\n    principal: state.context.principal,\n    activeProvider: state.context.activeProvider,\n    status: state.value.idle\n  }));\n  useEffect(() => {\n    const unsub = client.on(\"connect\", onConnect);\n    const unsub2 = client.on(\"disconnect\", onDisconnect);\n    return () => {\n      unsub();\n      unsub2();\n    };\n  }, [client]);\n  return {\n    principal,\n    activeProvider,\n    status,\n    isInitializing: (_client$_service$stat = (_client$_service$stat2 = client._service.state) === null || _client$_service$stat2 === void 0 ? void 0 : _client$_service$stat2.matches({\n      idle: \"initializing\"\n    })) !== null && _client$_service$stat !== void 0 ? _client$_service$stat : false,\n    isConnected: (_client$_service$stat3 = (_client$_service$stat4 = client._service.state) === null || _client$_service$stat4 === void 0 ? void 0 : _client$_service$stat4.matches({\n      idle: \"connected\"\n    })) !== null && _client$_service$stat3 !== void 0 ? _client$_service$stat3 : false,\n    isConnecting: (_client$_service$stat5 = (_client$_service$stat6 = client._service.state) === null || _client$_service$stat6 === void 0 ? void 0 : _client$_service$stat6.matches({\n      idle: \"connecting\"\n    })) !== null && _client$_service$stat5 !== void 0 ? _client$_service$stat5 : false,\n    isDisconnecting: (_client$_service$stat7 = (_client$_service$stat8 = client._service.state) === null || _client$_service$stat8 === void 0 ? void 0 : _client$_service$stat8.matches({\n      idle: \"disconnecting\"\n    })) !== null && _client$_service$stat7 !== void 0 ? _client$_service$stat7 : false,\n    isIdle: (_client$_service$stat9 = (_client$_service$stat10 = client._service.state) === null || _client$_service$stat10 === void 0 ? void 0 : _client$_service$stat10.matches({\n      idle: \"idle\"\n    })) !== null && _client$_service$stat9 !== void 0 ? _client$_service$stat9 : false,\n    connect: provider => {\n      client.connect(provider);\n    },\n    disconnect: () => {\n      client.disconnect();\n    }\n  };\n};\n\n// TODO: Figure out ts error\n// @ts-ignore\nconst useCanister = function (canisterName) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    mode: \"auto\" // \"anonymous\" | \"connected\"\n\n  };\n  const {\n    mode\n  } = options;\n  const {\n    client\n  } = useContext(Connect2ICContext);\n  const anonymousActor = useSelector(client._service, state => state.context.anonymousActors[canisterName]);\n  const actor = useSelector(client._service, state => state.context.actors[canisterName]);\n  const canisterDefinition = useSelector(client._service, state => state.context.canisters[canisterName]);\n  const {\n    isConnected\n  } = useConnect();\n  const signedIn = isConnected && actor && mode !== \"anonymous\";\n  const canister = signedIn ? actor : anonymousActor; // TODO:\n\n  const loading = !canister;\n  const error = false;\n  return [canister, {\n    error,\n    loading,\n    canisterDefinition\n  }];\n};\n\nconst useWallet = () => {\n  const {\n    client\n  } = useContext(Connect2ICContext);\n  const activeProvider = useSelector(client._service, state => state.context.activeProvider);\n  const supportsWallet = !!(activeProvider !== null && activeProvider !== void 0 && activeProvider.meta.features.includes(\"wallet\"));\n  const {\n    isConnected\n  } = useConnect();\n  const wallet = isConnected && supportsWallet ? activeProvider : undefined;\n  return [wallet];\n};\n\nconst useBalance = () => {\n  // TODO: check if supported or not\n  const [wallet] = useWallet();\n  const {\n    activeProvider\n  } = useConnect();\n  const [assets, setAssets] = useState();\n  const [loading, setLoading] = useState(true); // TODO:\n\n  const [error, setError] = useState(false);\n\n  const refetch = async () => {\n    var _activeProvider$query;\n\n    if (!wallet || !activeProvider) {\n      setAssets(undefined);\n      return;\n    } // TODO: errors\n\n\n    const result = await ((_activeProvider$query = activeProvider.queryBalance) === null || _activeProvider$query === void 0 ? void 0 : _activeProvider$query.call(activeProvider));\n    setAssets(result);\n    setLoading(false);\n    return result;\n  };\n\n  useEffect(() => {\n    if (!wallet) {\n      setAssets(undefined);\n      return;\n    }\n\n    refetch();\n  }, [wallet]);\n  return [assets, {\n    loading,\n    error,\n    refetch\n  }];\n};\n\nconst useDialog = function () {\n  const {\n    dialog\n  } = useContext(Connect2ICContext);\n  return dialog;\n};\n\nconst useProviders = () => {\n  const {\n    client\n  } = useContext(Connect2ICContext);\n  const providers = useSelector(client._service, state => state.context.providers);\n  return providers !== null && providers !== void 0 ? providers : [];\n};\n\nconst useSignMessage = _ref => {\n  let {\n    message\n  } = _ref;\n  // TODO: check if supported or not\n  const {\n    activeProvider\n  } = useConnect();\n  const [wallet] = useWallet();\n\n  const signMessage = () => {\n    var _activeProvider$signM;\n\n    if (!wallet || !activeProvider) {\n      return;\n    }\n\n    (_activeProvider$signM = activeProvider.signMessage) === null || _activeProvider$signM === void 0 ? void 0 : _activeProvider$signM.call(activeProvider, {\n      message\n    });\n  };\n\n  const loading = false;\n  const error = false;\n  return [signMessage, {\n    loading,\n    error\n  }];\n};\n\nconst useTransfer = _ref => {\n  let {\n    amount,\n    to,\n    from = undefined\n  } = _ref;\n  // TODO: check if supported or not\n  const [wallet] = useWallet();\n  const {\n    activeProvider,\n    principal\n  } = useConnect();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const transfer = async () => {\n    if (!wallet || !activeProvider) {\n      return;\n    }\n\n    setLoading(true);\n    const result = await activeProvider.requestTransfer({\n      amount,\n      to,\n      from: from !== null && from !== void 0 ? from : principal\n    }).catch(e => {\n      setError(e);\n    });\n    setLoading(false);\n    return result;\n  };\n\n  return [transfer, {\n    loading,\n    error\n  }];\n};\n\nconst useClient = () => {\n  const {\n    client\n  } = useContext(Connect2ICContext);\n  return client;\n};\n\nconst ConnectButton = props => {\n  const {\n    style = {},\n    dark = false,\n    onConnect = () => {},\n    onDisconnect = () => {},\n    children\n  } = props;\n  const dialog = useDialog();\n  const {\n    disconnect,\n    isConnected\n  } = useConnect({\n    onConnect,\n    onDisconnect\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !isConnected ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dialog.open(),\n    style: style,\n    className: \"connect-button\"\n  }, children !== null && children !== void 0 ? children : \"Connect\") : null, isConnected ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: disconnect,\n    style: style,\n    className: \"connect-button\"\n  }, children !== null && children !== void 0 ? children : \"Disconnect\") : null);\n};\n\nvar ConnectButton$1 = ConnectButton;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nconst ConnectDialog = props => {\n  const {\n    onClose = () => {\n      dialog.close();\n    },\n    children,\n    dark\n  } = props;\n  const dialog = useDialog();\n  const providers = useProviders();\n  const {\n    connect,\n    isConnected\n  } = useConnect();\n  useEffect(() => {\n    if (isConnected) {\n      dialog.close();\n    }\n  }, [isConnected]);\n  useEffect(() => {\n    if (dialog.isOpen) {\n      document.body.style.overflow = \"hidden\";\n    }\n\n    if (!dialog.isOpen) {\n      document.body.style.overflow = \"unset\";\n    }\n  }, [dialog.isOpen]);\n  useEffect(() => {\n    const handleEsc = event => {\n      if (event.keyCode === 27) {\n        dialog.close();\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleEsc);\n    return () => {\n      window.removeEventListener(\"keydown\", handleEsc);\n    };\n  }, []);\n\n  const onClickInside = e => {\n    e.stopPropagation();\n  };\n\n  return dialog.isOpen ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dialog-styles \".concat(dark ? \"dark\" : \"light\"),\n    onClick: onClose\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onClickInside,\n    className: \"dialog-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, providers.map(provider => {\n    return /*#__PURE__*/React.createElement(\"button\", _extends({\n      key: provider.meta.id,\n      onClick: () => connect(provider.meta.id),\n      className: \"button-styles \".concat(provider.meta.id, \"-styles\")\n    }, props), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-styles\",\n      src: dark ? provider.meta.icon.dark : provider.meta.icon.light\n    }), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"button-label\"\n    }, provider.meta.name)));\n  }))))) : null;\n};\n\nvar ConnectDialog$1 = ConnectDialog;\n\nexport { Connect2ICContext, Connect2ICProvider, ConnectButton$1 as ConnectButton, ConnectDialog$1 as ConnectDialog, useBalance, useCanister, useClient, useConnect, useDialog, useProviders, useSignMessage, useTransfer, useWallet };\n", "var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { useCallback, useEffect } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { InterpreterStatus, State } from 'xstate';\nimport { useIdleInterpreter } from './useInterpret';\nimport { isInterpreterStateEqual } from './utils';\nfunction identity(a) {\n    return a;\n}\nexport function useMachine(getMachine) {\n    var _a = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        _a[_i - 1] = arguments[_i];\n    }\n    var _b = __read(_a, 1), _c = _b[0], options = _c === void 0 ? {} : _c;\n    // using `useIdleInterpreter` allows us to subscribe to the service *before* we start it\n    // so we don't miss any notifications\n    var service = useIdleInterpreter(getMachine, options);\n    var getSnapshot = useCallback(function () {\n        if (service.status === InterpreterStatus.NotStarted) {\n            return (options.state\n                ? State.create(options.state)\n                : service.machine.initialState);\n        }\n        return service.getSnapshot();\n    }, [service]);\n    var isEqual = useCallback(function (prevState, nextState) {\n        return isInterpreterStateEqual(service, prevState, nextState);\n    }, [service]);\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = service.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [service]);\n    var storeSnapshot = useSyncExternalStoreWithSelector(subscribe, getSnapshot, getSnapshot, identity, isEqual);\n    useEffect(function () {\n        var rehydratedState = options.state;\n        service.start(rehydratedState ? State.create(rehydratedState) : undefined);\n        return function () {\n            service.stop();\n            service.status = InterpreterStatus.NotStarted;\n        };\n    }, []);\n    return [storeSnapshot, service.send, service];\n}\n", "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { useEffect, useState } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport { interpret, InterpreterStatus, State, toObserver } from 'xstate';\nimport useConstant from './useConstant';\nexport function useIdleInterpreter(getMachine, options) {\n    var machine = useConstant(function () {\n        return typeof getMachine === 'function' ? getMachine() : getMachine;\n    });\n    if (process.env.NODE_ENV !== 'production' &&\n        typeof getMachine !== 'function') {\n        var _a = __read(useState(machine), 1), initialMachine = _a[0];\n        if (getMachine !== initialMachine) {\n            console.warn('Machine given to `useMachine` has changed between renders. This is not supported and might lead to unexpected results.\\n' +\n                'Please make sure that you pass the same Machine as argument each time.');\n        }\n    }\n    var context = options.context, guards = options.guards, actions = options.actions, activities = options.activities, services = options.services, delays = options.delays, rehydratedState = options.state, interpreterOptions = __rest(options, [\"context\", \"guards\", \"actions\", \"activities\", \"services\", \"delays\", \"state\"]);\n    var service = useConstant(function () {\n        var machineConfig = {\n            context: context,\n            guards: guards,\n            actions: actions,\n            activities: activities,\n            services: services,\n            delays: delays\n        };\n        var machineWithConfig = machine.withConfig(machineConfig, function () { return (__assign(__assign({}, machine.context), context)); });\n        return interpret(machineWithConfig, interpreterOptions);\n    });\n    // Make sure options are kept updated when they change.\n    // This mutation assignment is safe because the service instance is only used\n    // in one place -- this hook's caller.\n    useIsomorphicLayoutEffect(function () {\n        Object.assign(service.machine.options.actions, actions);\n        Object.assign(service.machine.options.guards, guards);\n        Object.assign(service.machine.options.activities, activities);\n        Object.assign(service.machine.options.services, services);\n        Object.assign(service.machine.options.delays, delays);\n    }, [actions, guards, activities, services, delays]);\n    return service;\n}\nexport function useInterpret(getMachine) {\n    var _a = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        _a[_i - 1] = arguments[_i];\n    }\n    var _b = __read(_a, 2), _c = _b[0], options = _c === void 0 ? {} : _c, observerOrListener = _b[1];\n    var service = useIdleInterpreter(getMachine, options);\n    useEffect(function () {\n        if (!observerOrListener) {\n            return;\n        }\n        var sub = service.subscribe(toObserver(observerOrListener));\n        return function () {\n            sub.unsubscribe();\n        };\n    }, [observerOrListener]);\n    useEffect(function () {\n        var rehydratedState = options.state;\n        service.start(rehydratedState ? State.create(rehydratedState) : undefined);\n        return function () {\n            service.stop();\n            service.status = InterpreterStatus.NotStarted;\n        };\n    }, []);\n    return service;\n}\n", "import { useLayoutEffect } from 'react';\n\nvar index =  useLayoutEffect ;\n\nexport default index;\n", "import * as React from 'react';\nexport default function useConstant(fn) {\n    var ref = React.useRef();\n    if (!ref.current) {\n        ref.current = { v: fn() };\n    }\n    return ref.current.v;\n}\n", "var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { InterpreterStatus } from 'xstate';\nexport function partition(items, predicate) {\n    var e_1, _a;\n    var _b = __read([[], []], 2), truthy = _b[0], falsy = _b[1];\n    try {\n        for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n            var item = items_1_1.value;\n            if (predicate(item)) {\n                truthy.push(item);\n            }\n            else {\n                falsy.push(item);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return [truthy, falsy];\n}\nexport function getServiceSnapshot(service) {\n    return service.status !== 0\n        ? service.getSnapshot()\n        : service.machine.initialState;\n}\n// From https://github.com/reduxjs/react-redux/blob/master/src/utils/shallowEqual.ts\nfunction is(x, y) {\n    if (x === y) {\n        return x !== 0 || y !== 0 || 1 / x === 1 / y;\n    }\n    else {\n        return x !== x && y !== y;\n    }\n}\nexport function shallowEqual(objA, objB) {\n    if (is(objA, objB))\n        return true;\n    if (typeof objA !== 'object' ||\n        objA === null ||\n        typeof objB !== 'object' ||\n        objB === null) {\n        return false;\n    }\n    var keysA = Object.keys(objA);\n    var keysB = Object.keys(objB);\n    if (keysA.length !== keysB.length)\n        return false;\n    for (var i = 0; i < keysA.length; i++) {\n        if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) ||\n            !is(objA[keysA[i]], objB[keysA[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function isService(actor) {\n    return 'state' in actor && 'machine' in actor;\n}\nexport function isInterpreterStateEqual(service, prevState, nextState) {\n    if (service.status === InterpreterStatus.NotStarted) {\n        return true;\n    }\n    // Only change the current state if:\n    // - the incoming state is the \"live\" initial state (since it might have new actors)\n    // - OR the incoming state actually changed.\n    //\n    // The \"live\" initial state will have .changed === undefined.\n    var initialStateChanged = nextState.changed === undefined &&\n        (Object.keys(nextState.children).length > 0 ||\n            typeof prevState.changed === 'boolean');\n    return !(nextState.changed || initialStateChanged);\n}\n", "import { useRef, useCallback } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport useConstant from './useConstant';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { getServiceSnapshot, isInterpreterStateEqual, isService } from './utils';\nfunction identity(a) {\n    return a;\n}\nexport function isActorWithState(actorRef) {\n    return 'state' in actorRef;\n}\nfunction isDeferredActor(actorRef) {\n    return 'deferred' in actorRef;\n}\nfunction defaultGetSnapshot(actorRef) {\n    return 'getSnapshot' in actorRef\n        ? isService(actorRef)\n            ? getServiceSnapshot(actorRef)\n            : actorRef.getSnapshot()\n        : isActorWithState(actorRef)\n            ? actorRef.state\n            : undefined;\n}\nexport function useActor(actorRef, getSnapshot) {\n    if (getSnapshot === void 0) { getSnapshot = defaultGetSnapshot; }\n    var actorRefRef = useRef(actorRef);\n    var deferredEventsRef = useRef([]);\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = actorRef.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [actorRef]);\n    var boundGetSnapshot = useCallback(function () { return getSnapshot(actorRef); }, [actorRef, getSnapshot]);\n    var isEqual = useCallback(function (prevState, nextState) {\n        if (isService(actorRef)) {\n            return isInterpreterStateEqual(actorRef, prevState, nextState);\n        }\n        return prevState === nextState;\n    }, [actorRef]);\n    var storeSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, identity, isEqual);\n    var send = useConstant(function () { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var event = args[0];\n        if (process.env.NODE_ENV !== 'production' && args.length > 1) {\n            console.warn(\"Unexpected payload: \".concat(JSON.stringify(args[1]), \". Only a single event object can be sent to actor send() functions.\"));\n        }\n        var currentActorRef = actorRefRef.current;\n        // If the previous actor is a deferred actor,\n        // queue the events so that they can be replayed\n        // on the non-deferred actor.\n        if (isDeferredActor(currentActorRef) && currentActorRef.deferred) {\n            deferredEventsRef.current.push(event);\n        }\n        else {\n            currentActorRef.send(event);\n        }\n    }; });\n    useIsomorphicLayoutEffect(function () {\n        actorRefRef.current = actorRef;\n        // Dequeue deferred events from the previous deferred actorRef\n        while (deferredEventsRef.current.length > 0) {\n            var deferredEvent = deferredEventsRef.current.shift();\n            actorRef.send(deferredEvent);\n        }\n    }, [actorRef]);\n    return [storeSnapshot, send];\n}\n", "import { useCallback, useRef } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { isActorWithState } from './useActor';\nimport { getServiceSnapshot, isService } from './utils';\nvar defaultCompare = function (a, b) { return a === b; };\nvar defaultGetSnapshot = function (a, initialStateCacheRef) {\n    if (isService(a)) {\n        // A status of 0 = interpreter not started\n        if (a.status === 0 && initialStateCacheRef.current) {\n            return initialStateCacheRef.current;\n        }\n        var snapshot = getServiceSnapshot(a);\n        initialStateCacheRef.current = a.status === 0 ? snapshot : null;\n        return snapshot;\n    }\n    return isActorWithState(a) ? a.state : undefined;\n};\nexport function useSelector(actor, selector, compare, getSnapshot) {\n    if (compare === void 0) { compare = defaultCompare; }\n    var initialStateCacheRef = useRef(null);\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = actor.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [actor]);\n    var boundGetSnapshot = useCallback(function () {\n        if (getSnapshot) {\n            return getSnapshot(actor);\n        }\n        return defaultGetSnapshot(actor, initialStateCacheRef);\n    }, [actor, getSnapshot]);\n    var selectedSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n    return selectedSnapshot;\n}\n", "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { useInterpret } from './useInterpret';\nimport { useActor as useActorUnbound } from './useActor';\nimport { useSelector as useSelectorUnbound } from './useSelector';\nexport function createActorContext(machine, interpreterOptions, observerOrListener) {\n    var ReactContext = React.createContext(null);\n    var OriginalProvider = ReactContext.Provider;\n    function Provider(_a) {\n        var children = _a.children, _b = _a.machine, providedMachine = _b === void 0 ? machine : _b, options = _a.options;\n        var actor = useInterpret(providedMachine, __assign(__assign({}, interpreterOptions), options), observerOrListener);\n        return React.createElement(OriginalProvider, { value: actor }, children);\n    }\n    Provider.displayName = \"ActorProvider(\".concat(machine.id, \")\");\n    function useContext() {\n        var actor = React.useContext(ReactContext);\n        if (!actor) {\n            throw new Error(\"You used a hook from \\\"\".concat(Provider.displayName, \"\\\" but it's not inside a <\").concat(Provider.displayName, \"> component.\"));\n        }\n        return actor;\n    }\n    function useActor() {\n        var actor = useContext();\n        return useActorUnbound(actor);\n    }\n    function useSelector(selector, compare) {\n        var actor = useContext();\n        return useSelectorUnbound(actor, selector, compare);\n    }\n    return {\n        Provider: Provider,\n        useActorRef: useContext,\n        useActor: useActor,\n        useSelector: useSelector\n    };\n}\n"],
  "mappings": "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",
  "names": ["React", "useState", "useEffect", "useLayoutEffect", "error", "React", "useRef", "useEffect", "useSyncExternalStoreWithSelector", "import_react", "import_react", "import_react", "import_react", "import_with_selector", "import_react", "import_with_selector", "React", "React"]
}
